services:

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"   # UI
      - "14250:14250"   # gRPC
      - "14268:14268"   # HTTP
      - "6831:6831"     # UDP
      - "6832:6832"     # UDP
    networks:
      - app-network
    restart: unless-stopped
    logging:
      driver: "json-file"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config:/etc/prometheus
    ports:
      - "9090:9090"
    networks:
      - app-network
    depends_on:
      - jaeger
    logging:
      driver: "none"

  # Development backend
  backend-dev:
    build: 
      context: ./backend
      args:
        - NODE_ENV=development
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=roman-numeral-service-dev
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    depends_on:
      - jaeger
      - prometheus
    volumes:
      - ./backend/logs:/app/logs
    logging:
      driver: "json-file"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s

  # Development frontend
  frontend-dev:
    build: 
      context: ./frontend
      args:
        - NODE_ENV=development
    ports:
      - "3000:80"
    environment:
      - REACT_APP_BACKEND_URL=http://backend-dev:8080
    networks:
      - app-network
    depends_on:
      backend-dev:
        condition: service_healthy
    restart: unless-stopped

networks:
  app-network:
    driver: bridge